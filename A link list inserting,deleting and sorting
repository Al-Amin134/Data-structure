#include<bits/stdc++.h>
using namespace std;
struct node{
        int info;
        struct node *next;

};
typedef struct node* Node;
Node getnode(void)
{
    Node p = (Node)malloc(sizeof(struct node));
    p->next = NULL;
    return p;
}
main()
{

    //making a link list:
    Node start = NULL,ptr = NULL;
    int data;
    int cnt =0;
    cout<<"Enter a negative number to terminate the list"<<endl;
    cin>>data;
    if(data>=0){
            start = getnode();
            ptr = start;
        ptr->info = data;
    }
    ptr = start;
    while(data>=0){
            cin>>data;
            if(data>=0){
    ptr->next= getnode();
    ptr = ptr->next;
    ptr->info = data;
            }

    }



    //print the link list:
    ptr = start;
    while(ptr!=NULL){
        cout<<ptr->info<<" ";
        ptr = ptr->next;
    }




    //Add element at the first position of the link list
    Node node1 = getnode();
    cout<<"\n";
    cout<<"Enter a number to add the first position of the list"<<endl;
    int number;
    cin>>number;
    node1->info = number;
    node1->next = start;
    ptr = node1;
    while(ptr!= NULL){
        cout<<ptr->info<<" ";
        ptr = ptr->next;
    }
    start = node1;




    //Add element at the last position of the link list
    Node node2 = getnode();
    cout<<"\n";
    cout<<"Enter a number to add the last position of the list"<<endl;
    cin>>number;
    node2->info = number;
    ptr = start;
    while(1){
        if(ptr->next==NULL){
            ptr->next = node2;
            break;
        }
        ptr = ptr->next;
    }
    ptr = start;
    cnt = 0;
    while(ptr!= NULL){
        cout<<ptr->info<<" ";
        ptr = ptr->next;
    }



    //Add element at any position of a link list
    cout<<"\n";
    Node node3 = getnode();
    cout<<"Enter the position to add a data"<<endl;
    int pos;
    cin>>pos;
    cout<<"Enter the number to add data"<<endl;
    cin>>number;
    node3->info = number;
    ptr = start;
    cnt = 0;
    while(ptr!=NULL){
        cnt++;
        if(pos-1==cnt){
            node3->next = ptr->next;
            ptr->next = node3;
            break;
        }
        ptr = ptr->next;
    }
    ptr = start;
    while(ptr!=NULL){
        cout<<ptr->info<<" ";
        ptr = ptr->next;
    }

    //delete the first element from the list
    string s;
    cout<<"\n Please Enter 'y' to remove the first element of the list"<<endl;
    cin>>s;
    if(s=="y")
    ptr = start->next;
    free(start);
    start = ptr;
    while(ptr!=NULL){
        cout<<ptr->info<<" ";
        ptr = ptr->next;
    }


    //delete the last element from the list
    cout<<"\n delete the last element of the list"<<endl;

    Node save = start;
    cnt =0;
    while(save->next->next!=NULL){
            save = save->next;
    }
    free(save->next);
    save->next = NULL;
        ptr = start;
    while(ptr!=NULL){
        cout<<ptr->info<<" ";
         ptr = ptr->next;
         cnt++;
    }


    //delete the the positional node from a link list
    cout<<"\nEnter the location to remove the node"<<endl;
    int loc;
    cin>>loc;
        Node temp = start;
        //ptr = start;
        cnt=2;
        while(temp!=NULL){
                if(cnt==loc){
                    temp->next = temp->next->next;
                }
            temp = temp->next;
            cnt++;
        }

        //start = temp;
       // start = temp;
        temp = start;
        while(temp!=NULL){
            cout<<temp->info<<" ";
            temp = temp->next;
        }


//delete the element from the array

cout<<"\n Enter the element which you want to remove from the array"<<endl;
int element;
cin>>element;
temp = start;
ptr = start;
if(start->info==element){
        start = start->next;

}
else{
while(temp!=NULL){
    if(temp->next->info==element){
        temp->next= temp->next->next;
        break;
    }
   // ptr->next = temp;
    temp = temp->next;
}
}
temp = start;
ptr = temp;
int c=1;
while(temp!=NULL){
    cout<<temp->info<<" ";
    c++;
    temp = temp->next;
}


//sorting

cout<<"\n";
ptr = start;
Node i,j;
for( i=start;i!=NULL;i=i->next){
        for(j=i;j!=NULL;j=j->next){
            if(i->info>j->info){
                swap(i->info,j->info);
            }
        }
}
cout<<"sorted list"<<endl;
i = start;
while(i!=NULL){
    cout<<i->info<<" ";
    i = i->next;
}

}
